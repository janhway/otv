<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<context:component-scan base-package="com.otv">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 讓spring 去读取指定路径下的资源文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置简单的mysql datasource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 配置c3p0连接池 -->
	<!-- <bean id="c3p0Source" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass" value="${jdbc.driverClass}" 
		/> <property name="jdbcUrl" value="${jdbc.url}" /> <property name="user" 
		value="${jdbc.user}" /> <property name="password" value="${jdbc.password}" 
		/> <property name="initialPoolSize" value="${jdbc.initialPoolSize}" /> <property 
		name="minPoolSize" value="${jdbc.minPoolSize}" /> <property name="maxPoolSize" 
		value="${jdbc.maxPoolSize}" /> </bean> -->

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mappingResources">
			<list>
				<value>com/otv/entity/hbm.xml</value>
			</list>
		</property> -->
		<property name="packagesToScan">
			<list>
				<value>com.otv.entity</value>
			</list>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop> 
				<prop key="hibernate.format_sql">true</prop> 
				<prop key="hibernate.current_session_context_class">
				 org.springframework.orm.hibernate4.SpringSessionContext</prop>
				 <prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.jdbc.fetch_size">80</prop> <prop key="hibernate.jdbc.batch_size">35</prop> -->
			</props>

		</property>
	</bean>	

	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 定义事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义事务切面，并应用事务通知 -->
	<aop:config>
		<aop:pointcut id="xxxImpl"
			expression="execution(* com.otv.dao.*.*(..))" />
		<aop:advisor pointcut-ref="xxxImpl" advice-ref="txAdvice" />
	</aop:config>	

</beans>